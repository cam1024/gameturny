[{"C:\\Users\\saite\\dev\\gameturny\\client\\src\\index.js":"1","C:\\Users\\saite\\dev\\gameturny\\client\\src\\App.js":"2","C:\\Users\\saite\\dev\\gameturny\\client\\src\\pages\\Home.js":"3","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\auth.js":"4","C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\Header.js":"5","C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\SignupForm.js":"7","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\mutations.js":"8","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\queries.js":"9","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\API.js":"11"},{"size":266,"mtime":1678428386076,"results":"12","hashOfConfig":"13"},{"size":1467,"mtime":1678428386075,"results":"14","hashOfConfig":"13"},{"size":4869,"mtime":1678433093883,"results":"15","hashOfConfig":"13"},{"size":1076,"mtime":1678428386077,"results":"16","hashOfConfig":"13"},{"size":2097,"mtime":1678428386075,"results":"17","hashOfConfig":"13"},{"size":2495,"mtime":1678428386075,"results":"18","hashOfConfig":"13"},{"size":2936,"mtime":1678428386076,"results":"19","hashOfConfig":"13"},{"size":940,"mtime":1678428386078,"results":"20","hashOfConfig":"13"},{"size":220,"mtime":1678433055222,"results":"21","hashOfConfig":"13"},{"size":798,"mtime":1678428386077,"results":"22","hashOfConfig":"13"},{"size":174,"mtime":1678428386077,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sb18qs",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\saite\\dev\\gameturny\\client\\src\\index.js",[],["48","49"],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\App.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\pages\\Home.js",["50","51"],"import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Container,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Stack\n} from 'react-bootstrap';\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\nimport { useMutation } from '@apollo/client';\nimport { ADD_GAME } from '../utils/mutations';\nimport { QUERY_ME } from '../utils/queries';\nimport { saveGameIds, getSavedGameIds } from '../utils/localStorage';\nimport Auth from '../utils/auth';\n\nimport { searchGame } from '../utils/API';\n\n\n\n\n\nconst Home = () => {\n\n  const [searchedGames, setSearchedGames] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved GameId values\n  const [savedGameIds, setSavedGameIds] = useState(getSavedGameIds());\n\n  const [saveThisGame] = useMutation(ADD_GAME);\n\n  useEffect(() => {\n    return () => saveGameIds(savedGameIds);\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n    console.log(searchInput)\n    // try {\n      const response = await searchGame(searchInput);\n      console.log(response)\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const  {results}  = await response.json();\n      console.log(results)\n      const gameData = results.map((game) => ({\n        id: game.id,\n        name: game.name,\n        image: game.background_image || '',\n      }));\n\n      setSearchedGames(gameData);\n      setSearchInput('');\n    // } catch (err) {\n    //   console.error(err);\n    // }\n  };\n\n\n  // create function to handle saving a game to our database\n  const handleAddGame = async (id) => {\n    // find the game in `searchedgames` state by the matching id\n    const gameToSave = searchedGames.find((game) => game.id === id);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveThisGame({\n        variables: { gameData: {...gameToSave} }\n      })\n\n      // if game successfully saves to user's account, save game id to state\n      setSavedGameIds([...savedGameIds, gameToSave.id]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Container id='search-container' fluid >\n        <Form onSubmit={handleFormSubmit}>\n          <Row>\n            <Col xs={8} >\n              <Form.Control\n                name='searchInput'\n                value={searchInput}\n                onChange={(e) => setSearchInput(e.target.value)}\n                type='text'\n                placeholder='Search Games here' />\n            </Col>\n            <Col xs={10} md={2}>\n              <Button type='submit' variant=\"info\" size='md'>Search</Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n\n      <Container  >\n        <h2 className='text-white'>\n          {searchedGames.length\n            ? `Viewing ${searchedGames.length} results:`\n            : 'What do you want to play?'}\n        </h2>\n        <Stack direction='horizontal' gap={4}>\n          <Row xs={3} id='card-row' className='g-3'>\n            {searchedGames.map((game) => {\n              return (\n                <Col >\n                  <Card key={game.id} id='game-card' className=\"bg-dark text-white\">\n                    {game.image ? (\n                      <Card.Img src={game.image} alt={`artwork for ${game.name}`} />\n                    ) : null}\n                    <Card.ImgOverlay>\n                      <Card.Title>{game.name}</Card.Title>\n                      <Card.Text>{game.genre}</Card.Text>\n                      {Auth.loggedIn() && (\n                        <Button\n                          disabled={savedGameIds?.some((savedGameId) => savedGameId === game.id)}\n                          onClick={() => handleAddGame(game.id)}\n                          variant='info'>\n                          {savedGameIds?.some((savedGameId) => savedGameId === game.id)\n                            ? 'this game has been added'\n                            : 'add game to play list'}\n                        </Button>\n                      )}\n                    </Card.ImgOverlay>\n                  </Card>\n                </Col>\n              );\n            })}\n          </Row>\n          <Row id='game-list' >\n            <Col >\n              <Card bg='dark' text='white'>\n                <CardHeader as='h5'>Must Play List:</CardHeader>\n                <ListGroup>\n                  {/* {User.map(saved_games)} */}\n                    <ListGroupItem  action variant='info'>gameslist</ListGroupItem>\n                  {/* ))} */}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\auth.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\Header.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\LoginForm.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\components\\SignupForm.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\mutations.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\queries.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\saite\\dev\\gameturny\\client\\src\\utils\\API.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":16,"column":10,"nodeType":"58","messageId":"59","endLine":16,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":84,"column":15,"nodeType":"58","messageId":"59","endLine":84,"endColumn":19},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'QUERY_ME' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]